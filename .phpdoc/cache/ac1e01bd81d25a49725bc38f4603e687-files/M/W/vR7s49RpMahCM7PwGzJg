1715828540
ac1e01bd81d25a49725bc38f4603e687-phpdoc%3A64468bbc5a4a07225094e252e10286ec-55782bcdaa26e6a301fa840c5e572f3f
s:58080:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"55782bcdaa26e6a301fa840c5e572f3f";s:39:" phpDocumentor\Reflection\Php\File name";s:17:"ApiController.php";s:39:" phpDocumentor\Reflection\Php\File path";s:28:"Controller/ApiController.php";s:41:" phpDocumentor\Reflection\Php\File source";s:25839:"<?php

class ApiController {

    private $entityManager;

    private $entityId = ["Brands"=>"brand_id","Categories"=>"category_id","Employees"=>"employee_id","Products"=>"product_id","Stocks"=>"stock_id","Stores"=>"store_id"];

    public function __construct($entityManager){
        $this->entityManager=$entityManager;
    }

    public function handleRequest(){
        header("Access-Control-Allow-Origin: *");
        header("Content-Type: application/json; charset=UTF-8");
        header("Access-Control-Allow-Methods: GET, POST, PUT, DELETE");
        header("Access-Control-Max-Age: 3600");
        header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");

        $request_method=$_SERVER["REQUEST_METHOD"];
        $apiKey = isset(array_change_key_case(apache_request_headers(), CASE_LOWER)['authorization']) ? array_change_key_case(apache_request_headers(), CASE_LOWER)['authorization'] : '';

        switch($request_method){
            case "GET":
                $this->getAction($this->entityManager);
                break;
            case "POST":
                if (!$this->validateApiKey($apiKey)) {
                    $response = array("status" => 0, "status_message" => 'Access denied. Invalid API key.');
                    echo json_encode($response);
                    return;
                } else {
                    $this->postAction($this->entityManager);
                }
                break;
            case "PUT":
                if (!$this->validateApiKey($apiKey)) {
                    $response = array("status" => 0, "status_message" => 'Access denied. Invalid API key.');
                    echo json_encode($response);
                    return;
                } else {
                    $this->putAction($this->entityManager);
                }
                break;
            case "DELETE":
                if (!$this->validateApiKey($apiKey)) {
                    $response = array("status" => 0, "status_message" => 'Access denied. Invalid API key.');
                    echo json_encode($response);
                    return;
                } else {
                    $this->deleteAction($this->entityManager);
                }
                break;
            default:
                header("HTTP/1.1 405 Method Not Allowed");
                header("Allow: GET, POST, PUT, DELETE");
                break;
        }
    }

    private function getAction($entityManager){
        if (isset($_GET["table"])){
            $table=ucfirst($_GET["table"]);
            $className = "Entity\\" . $table;
            if (class_exists($className)){
                if (!empty($_GET["id"])){
                    $id=$_GET["id"];
                    $repository = $entityManager->getRepository($className);
                    $rep_id=$this->entityId[$table];
                    $e = $repository->findOneBy([$rep_id => $id]);
                    if($e!=NULL) echo json_encode($e);
                    else {
                        $response=array("status" => 0,"status_message" =>'ID : '.$id.' not found for table : '.$table);
                        echo json_encode($response);
                    }
                } else if (!empty($_GET["catName"])){
                    $catName=urldecode($_GET["catName"]);
                    $repository = $entityManager->getRepository($className);
                    $e = $repository->getProductsByCategoryName($catName);
                    if($e!=NULL) echo json_encode($e);
                    else {
                        $response=array("status" => 0,"status_message" =>'No products found for category : '.$catName);
                        echo json_encode($response);
                    }
                } else if (!empty($_GET["brandName"])){
                    $brandName=$_GET["brandName"];
                    $repository = $entityManager->getRepository($className);
                    $e = $repository->getProductsByBrandName($brandName);
                    if($e!=NULL) echo json_encode($e);
                    else {
                        $response=array("status" => 0,"status_message" =>'No products found for brand : '.$brandName);
                        echo json_encode($response);
                    }
                } else if (!empty($_GET["storeName"])){
                    if ($_GET["table"]=="Products") {
                        $storeName=$_GET["storeName"];
                        $repository = $entityManager->getRepository($className);
                        $e = $repository->getProductsByStoreName($storeName);
                        if($e!=NULL) echo json_encode($e);
                        else {
                            $response=array("status" => 0,"status_message" =>'No products found for store : '.$storeName);
                            echo json_encode($response);
                        }
                    } else if ($_GET["table"]=="Employees") {
                        $storeName=$_GET["storeName"];
                        $repository = $entityManager->getRepository($className);
                        $e = $repository->getEmployeesByStoreName($storeName);
                        if($e!=NULL) echo json_encode($e);
                        else {
                            $response=array("status" => 0,"status_message" =>'No employees found for store : '.$storeName);
                            echo json_encode($response);
                        }
                    }
                } else if (!empty($_GET["model_year"])){
                    $model_year=$_GET["model_year"];
                    $repository = $entityManager->getRepository($className);
                    $e = $repository->findBy(["model_year" => $model_year]);
                    if($e!=NULL) echo json_encode($e);
                    else {
                        $response=array("status" => 0,"status_message" =>'No products found for year : '.$model_year);
                        echo json_encode($response);
                    }
                } else {
                    $repository = $entityManager->getRepository("Entity\\".$table);
                    $e = $repository->findAll();
                    if($e!=NULL) echo json_encode($e);
                    else {
                        $response=array("status" => 0,"status_message" =>'No values inside table : '.$table);
                        echo json_encode($response);
                    }
                }
            } else {
                $response=array("status" => 0,"status_message" =>'Table : '.$table.' not found.');
                echo json_encode($response);
            }    
        } else {
            $response=array("status" => 0,"status_message" =>'No table specified');
            echo json_encode($response);
        }
    }

    private function postAction($entityManager){
        if (isset($_GET["table"])){
            $table=ucfirst($_GET["table"]);
            switch($table){
                case "Brands":
                    $data = json_decode(file_get_contents("php://input"), true);
                    if ($data === null) {
                        $response = array("status" => 0, "status_message" => 'Invalid JSON data');
                        echo json_encode($response);
                        return;
                    }
                    $brand = new \Entity\Brands();

                    $brand_name = $data['brand_name'];
    
                    $brand->setBrand_name($brand_name);

                    $entityManager->persist($brand);
                    $entityManager->flush();

                    $response = array("status_message" => 'Addition successful');
                    echo json_encode($response);
                    echo json_encode($brand);
                    break;
                case "Categories":
                    $data = json_decode(file_get_contents("php://input"), true);
                    if ($data === null) {
                        $response = array("status" => 0, "status_message" => 'Invalid JSON data');
                        echo json_encode($response);
                        return;
                    }
                    $category = new \Entity\Categories();

                    $category_name = $data['category_name'];
    
                    $category->setCategory_name($category_name);

                    $entityManager->persist($category);
                    $entityManager->flush();

                    $response = array("status_message" => 'Addition successful');
                    echo json_encode($response);
                    echo json_encode($category);
                    break;
                case "Employees":
                    $data = json_decode(file_get_contents("php://input"), true);
                    if ($data === null) {
                        $response = array("status" => 0, "status_message" => 'Invalid JSON data');
                        echo json_encode($response);
                        return;
                    }
                    $employee = new \Entity\Employees();

                    $store_id = $data['store_id'];
                    $employee_name = $data['employee_name'];
                    $employee_email = $data['employee_email'];
                    $employee_password = $data['employee_password'];
                    $employee_role = $data['employee_role'];

                    $store = $entityManager->getReference('Entity\Stores', $store_id);
    
                    $employee->setStore($store);
                    $employee->setEmployee_name($employee_name);
                    $employee->setEmployee_email($employee_email);
                    $employee->setEmployee_password($employee_password);
                    $employee->setEmployee_role($employee_role); 

                    $entityManager->persist($employee);
                    $entityManager->flush();

                    $response = array("status_message" => 'Addition successful');
                    echo json_encode($response);
                    echo json_encode($employee);
                    break;
                case "Products":
                    $data = json_decode(file_get_contents("php://input"), true);
                    if ($data === null) {
                        $response = array("status" => 0, "status_message" => 'Invalid JSON data');
                        echo json_encode($response);
                        return;
                    }
                    $product = new \Entity\Products();

                    $product_name = $data['product_name'];
                    $model_year = $data["model_year"];
                    $list_price = $data['list_price'];
                    $brand_id = $data['brand_id'];
                    $category_id = $data['category_id'];

                    $brand = $entityManager->getReference('Entity\Brands', $brand_id);
                    $category = $entityManager->getReference('Entity\Categories', $category_id);
    
                    $product->setProduct_name($product_name);
                    $product->setModel_year($model_year);
                    $product->setList_price($list_price);
                    $product->setBrand($brand);
                    $product->setCategory($category); 

                    $entityManager->persist($product);
                    $entityManager->flush();

                    $response = array("status_message" => 'Addition successful');
                    echo json_encode($response);
                    echo json_encode($product);
                    break;
                case "Stocks":
                    $data = json_decode(file_get_contents("php://input"), true);
                    if ($data === null) {
                        $response = array("status" => 0, "status_message" => 'Invalid JSON data');
                        echo json_encode($response);
                        return;
                    }
                    $stock = new \Entity\Stocks();

                    $store_id = $data['store_id'];
                    $product_id = $data['product_id'];
                    $quantity = $data['quantity'];

                    $store = $entityManager->getReference('Entity\Stores', $store_id);
                    $product = $entityManager->getReference('Entity\Products', $product_id);
    
                    $stock->setStore($store);
                    $stock->setProduct($product);
                    $stock->setQuantity($quantity);

                    $entityManager->persist($stock);
                    $entityManager->flush();

                    $response = array("status_message" => 'Addition successful');
                    echo json_encode($response);
                    echo json_encode($stock);
                    break;
                case "Stores":
                    $data = json_decode(file_get_contents("php://input"), true);
                    if ($data === null) {
                        $response = array("status" => 0, "status_message" => 'Invalid JSON data');
                        echo json_encode($response);
                        return;
                    }
                    $store = new \Entity\Stores();

                    $store_name = $data['store_name'];
                    $phone = $data['phone'];
                    $email = $data['email'];
                    $street = $data['street'];
                    $city = $data['city'];
                    $state = $data['state'];
                    $zip_code = $data['zip_code'];

                    $store->setStore_name($store_name);
                    $store->setPhone($phone);
                    $store->setEmail($email);
                    $store->setStreet($street);
                    $store->setCity($city); 
                    $store->setState($state); 
                    $store->setZip_code($zip_code);

                    $entityManager->persist($store);
                    $entityManager->flush();

                    $response = array("status_message" => 'Addition successful');
                    echo json_encode($response);
                    echo json_encode($store);
                    break;
            }
        } else {
            $response=array("status" => 0,"status_message" =>'No table specified');
            echo json_encode($response);
        }
    }

    private function putAction($entityManager){
        if (isset($_GET["table"])){
            $table=ucfirst($_GET["table"]);
            $className = "Entity\\" . $table;
            switch($table){
                case "Brands":
                    $data = json_decode(file_get_contents("php://input"), true);
                    if ($data === null) {
                        $response = array("status" => 0, "status_message" => 'Invalid JSON data');
                        echo json_encode($response);
                        return;
                    }
                    $id = $_GET["id"];
                    $repository = $entityManager->getRepository($className);
                    $entity = $repository->find($id);
                    if (!$entity) {
                        $response = array("status" => 0, "status_message" => 'Entity not found');
                        echo json_encode($response);
                        return;
                    }
    
                    $entity->setBrand_name($data['brand_name']);
    
                    $entityManager->flush();
    
                    $response = array("status_message" => 'Update successful');
                    echo json_encode($response);
                    echo json_encode($entity);
                    break;
    
                case "Categories":
                    $data = json_decode(file_get_contents("php://input"), true);
                    if ($data === null) {
                        $response = array("status" => 0, "status_message" => 'Invalid JSON data');
                        echo json_encode($response);
                        return;
                    }
                    $id = $_GET["id"];
                    $repository = $entityManager->getRepository($className);
                    $entity = $repository->find($id);
                    if (!$entity) {
                        $response = array("status" => 0, "status_message" => 'Entity not found');
                        echo json_encode($response);
                        return;
                    }
    
                    $entity->setCategory_name($data['category_name']);
    
                    $entityManager->flush();
    
                    $response = array("status_message" => 'Update successful');
                    echo json_encode($response);
                    echo json_encode($entity);
                    break;
    
                case "Employees":

                    $data = json_decode(file_get_contents("php://input"), true);
                    if ($data === null) {
                        $response = array("status" => 0, "status_message" => 'Invalid JSON data');
                        echo json_encode($response);
                        break;
                    }
                    $id = $_GET["id"];
                    $repository = $entityManager->getRepository($className);
                    $entity = $repository->find($id);
                    if (!$entity) {
                        $response = array("status" => 0, "status_message" => 'Entity not found');
                        echo json_encode($response);
                        return;
                    }

                    $store_id = $data['store_id'];
                    $store = $entityManager->getReference('Entity\Stores', $store_id);
                    
                    $entity->setEmployee_name($data['employee_name']);
                    $entity->setEmployee_email($data['employee_email']);
                    $entity->setEmployee_password($data['employee_password']);
                    $entity->setEmployee_role($data['employee_role']);

                    $entity->setStore($store);
    
                    $entityManager->flush();
    
                    $response = array("status_message" => 'Update successful');
                    echo json_encode($response);
                    echo json_encode($entity);
                    break;

                case "Products":
                    $data = json_decode(file_get_contents("php://input"), true);
                    if ($data === null) {
                        $response = array("status" => 0, "status_message" => 'Invalid JSON data');
                        echo json_encode($response);
                        return;
                    }
                    $id = $_GET["id"];
                    $repository = $entityManager->getRepository($className);
                    $entity = $repository->find($id);
                    if (!$entity) {
                        $response = array("status" => 0, "status_message" => 'Entity not found');
                        echo json_encode($response);
                        return;
                    }
                    
                    $brandId = $data['brand_id'];
                    $categoryId = $data['category_id'];
                    $brand = $entityManager->getReference('Entity\Brands', $brandId);
                    $category = $entityManager->getReference('Entity\Categories', $categoryId);

                    $entity->setProduct_name($data['product_name']);
                    $entity->setModel_year($data['model_year']);
                    $entity->setList_price($data['list_price']);
    
                    $entity->setBrand($brand);
                    $entity->setCategory($category);
    
                    $entityManager->flush();
    
                    $response = array("status_message" => 'Update successful');
                    echo json_encode($response);
                    echo json_encode($entity);
                    break;
    
                case "Stocks":
                    $data = json_decode(file_get_contents("php://input"), true);
                    if ($data === null) {
                        $response = array("status" => 0, "status_message" => 'Invalid JSON data');
                        echo json_encode($response);
                        return;
                    }
                    $id = $_GET["id"];
                    $repository = $entityManager->getRepository($className);
                    $entity = $repository->find($id);
                    if (!$entity) {
                        $response = array("status" => 0, "status_message" => 'Entity not found');
                        echo json_encode($response);
                        return;
                    }

                    $store_id = $data['store_id'];
                    $product_id = $data['product_id'];
                    $store = $entityManager->getReference('Entity\Stores', $store_id);
                    $product = $entityManager->getReference('Entity\Products', $product_id);
    
                    $entity->setQuantity($data['quantity']);

                    $entity->setStore($store);
                    $entity->setProduct($product);
    
                    $entityManager->flush();
    
                    $response = array("status_message" => 'Update successful');
                    echo json_encode($response);
                    echo json_encode($entity);
                    break;
    
                case "Stores":
                    $data = json_decode(file_get_contents("php://input"), true);
                    if ($data === null) {
                        $response = array("status" => 0, "status_message" => 'Invalid JSON data');
                        echo json_encode($response);
                        return;
                    }
                    $id = $_GET["id"];
                    $repository = $entityManager->getRepository($className);
                    $entity = $repository->find($id);
                    if (!$entity) {
                        $response = array("status" => 0, "status_message" => 'Entity not found');
                        echo json_encode($response);
                        return;
                    }
    
                    $entity->setStore_name($data['store_name']);
                    $entity->setPhone($data['phone']);
                    $entity->setEmail($data['email']);
                    $entity->setStreet($data['street']);
                    $entity->setCity($data['city']);
                    $entity->setState($data['state']);
                    $entity->setZip_code($data['zip_code']);
    
                    $entityManager->flush();
    
                    $response = array("status_message" => 'Update successful');
                    echo json_encode($response);
                    echo json_encode($entity);
                    break;
            }
        } else {
            $response=array("status" => 0,"status_message" =>'No table specified');
            echo json_encode($response);
        }
    }
    

    private function deleteAction($entityManager){
        if (isset($_GET["table"])){
            $table=ucfirst($_GET["table"]);
            $className = "Entity\\" . $table;
            if (class_exists($className)){
                if (!empty($_GET["id"])){
                    $id=$_GET["id"];
                    $repository = $entityManager->getRepository($className);
                    $entity = $repository->find($id);
                    if (!$entity) {
                        $response = array("status" => 0, "status_message" => 'Entity not found');
                        echo json_encode($response);
                        return;
                    }
                    try {
                        
                        $entityManager->remove($entity);
                        $entityManager->flush();

                        $response = array("status_message" => 'Deletion successful');
                        echo json_encode($response);
                    } catch (\Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException $e) {

                        $response = array("status" => 0, "status_message" => 'Cannot delete '.$table.': It is referenced in other tables');
                        echo json_encode($response);
                    }
                } else {
                    $response = array("status" => 0, "status_message" => 'No ID specified');
                    echo json_encode($response);
                }
            } else {
                $response=array("status" => 0, "status_message" =>'Table : '.$table.' not found.');
                echo json_encode($response);
            }    
        } else {
            $response=array("status" => 0, "status_message" =>'No table specified');
            echo json_encode($response);
        }
    }

    private function validateApiKey($apiKey) {
        $validKey = "e8f1997c763";
        $apiKey = explode(' ', $apiKey);
        if (count($apiKey) === 2 && $apiKey[0] === 'Bearer') {
            $apiKey = $apiKey[1];
        }    
        if ($apiKey==$validKey) {
            return true;
        } else {
            return false;
        }
    }
    
    
}

?>";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:14:"\ApiController";O:35:"phpDocumentor\Reflection\Php\Class_":14:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:14:"\ApiController";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"ApiController";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ readOnly";b:0;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";N;s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:2:{s:30:"\ApiController::$entityManager";O:37:"phpDocumentor\Reflection\Php\Property":11:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:30:"\ApiController::$entityManager";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"entityManager";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";N;s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:5;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Property endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:5;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}s:25:"\ApiController::$entityId";O:37:"phpDocumentor\Reflection\Php\Property":11:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:25:"\ApiController::$entityId";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"entityId";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:161:"["Brands" => "brand_id", "Categories" => "category_id", "Employees" => "employee_id", "Products" => "product_id", "Stocks" => "stock_id", "Stores" => "store_id"]";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:7;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Property endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:7;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:7:{s:29:"\ApiController::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:29:"\ApiController::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:13:"entityManager";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:9;s:47:" phpDocumentor\Reflection\Location columnNumber";i:242;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:11;s:47:" phpDocumentor\Reflection\Location columnNumber";i:338;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:31:"\ApiController::handleRequest()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:31:"\ApiController::handleRequest()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"handleRequest";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:13;s:47:" phpDocumentor\Reflection\Location columnNumber";i:347;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:59;s:47:" phpDocumentor\Reflection\Location columnNumber";i:2518;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:27:"\ApiController::getAction()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\ApiController::getAction()";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"getAction";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:13:"entityManager";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:61;s:47:" phpDocumentor\Reflection\Location columnNumber";i:2527;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:140;s:47:" phpDocumentor\Reflection\Location columnNumber";i:6985;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:28:"\ApiController::postAction()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:28:"\ApiController::postAction()";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"postAction";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:13:"entityManager";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:142;s:47:" phpDocumentor\Reflection\Location columnNumber";i:6994;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:311;s:47:" phpDocumentor\Reflection\Location columnNumber";i:14700;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:27:"\ApiController::putAction()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\ApiController::putAction()";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"putAction";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:13:"entityManager";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:313;s:47:" phpDocumentor\Reflection\Location columnNumber";i:14709;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:505;s:47:" phpDocumentor\Reflection\Location columnNumber";i:23593;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:30:"\ApiController::deleteAction()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:30:"\ApiController::deleteAction()";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"deleteAction";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:13:"entityManager";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:508;s:47:" phpDocumentor\Reflection\Location columnNumber";i:23608;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:546;s:47:" phpDocumentor\Reflection\Location columnNumber";i:25451;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:32:"\ApiController::validateApiKey()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:32:"\ApiController::validateApiKey()";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"validateApiKey";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"apiKey";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:548;s:47:" phpDocumentor\Reflection\Location columnNumber";i:25460;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:559;s:47:" phpDocumentor\Reflection\Location columnNumber";i:25817;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:562;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";